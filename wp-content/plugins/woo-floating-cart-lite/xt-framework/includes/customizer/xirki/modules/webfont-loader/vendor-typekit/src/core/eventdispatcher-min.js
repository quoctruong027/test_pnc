goog.provide("webfont.EventDispatcher");goog.require("webfont.CssClassName");webfont.EventDispatcher=function(domHelper,config){this.domHelper_=domHelper;this.htmlElement_=domHelper.getLoadWindow().document.documentElement;this.callbacks_=config;this.namespace_=webfont.EventDispatcher.DEFAULT_NAMESPACE;this.cssClassName_=new webfont.CssClassName("-");this.dispatchEvents_=config["events"]!==false;this.setClasses_=config["classes"]!==false};webfont.EventDispatcher.DEFAULT_NAMESPACE="wf";webfont.EventDispatcher.LOADING="loading";webfont.EventDispatcher.ACTIVE="active";webfont.EventDispatcher.INACTIVE="inactive";webfont.EventDispatcher.FONT="font";goog.scope(function(){var EventDispatcher=webfont.EventDispatcher;EventDispatcher.prototype.dispatchLoading=function(){if(this.setClasses_){this.domHelper_.updateClassName(this.htmlElement_,[this.cssClassName_.build(this.namespace_,webfont.EventDispatcher.LOADING)])}this.dispatch_(webfont.EventDispatcher.LOADING)};EventDispatcher.prototype.dispatchFontLoading=function(font){if(this.setClasses_){this.domHelper_.updateClassName(this.htmlElement_,[this.cssClassName_.build(this.namespace_,font.getName(),font.getVariation().toString(),webfont.EventDispatcher.LOADING)])}this.dispatch_(webfont.EventDispatcher.FONT+webfont.EventDispatcher.LOADING,font)};EventDispatcher.prototype.dispatchFontActive=function(font){if(this.setClasses_){this.domHelper_.updateClassName(this.htmlElement_,[this.cssClassName_.build(this.namespace_,font.getName(),font.getVariation().toString(),webfont.EventDispatcher.ACTIVE)],[this.cssClassName_.build(this.namespace_,font.getName(),font.getVariation().toString(),webfont.EventDispatcher.LOADING),this.cssClassName_.build(this.namespace_,font.getName(),font.getVariation().toString(),webfont.EventDispatcher.INACTIVE)])}this.dispatch_(webfont.EventDispatcher.FONT+webfont.EventDispatcher.ACTIVE,font)};EventDispatcher.prototype.dispatchFontInactive=function(font){if(this.setClasses_){var hasFontActive=this.domHelper_.hasClassName(this.htmlElement_,this.cssClassName_.build(this.namespace_,font.getName(),font.getVariation().toString(),webfont.EventDispatcher.ACTIVE)),add=[],remove=[this.cssClassName_.build(this.namespace_,font.getName(),font.getVariation().toString(),webfont.EventDispatcher.LOADING)];if(!hasFontActive){add.push(this.cssClassName_.build(this.namespace_,font.getName(),font.getVariation().toString(),webfont.EventDispatcher.INACTIVE))}this.domHelper_.updateClassName(this.htmlElement_,add,remove)}this.dispatch_(webfont.EventDispatcher.FONT+webfont.EventDispatcher.INACTIVE,font)};EventDispatcher.prototype.dispatchInactive=function(){if(this.setClasses_){var hasActive=this.domHelper_.hasClassName(this.htmlElement_,this.cssClassName_.build(this.namespace_,webfont.EventDispatcher.ACTIVE)),add=[],remove=[this.cssClassName_.build(this.namespace_,webfont.EventDispatcher.LOADING)];if(!hasActive){add.push(this.cssClassName_.build(this.namespace_,webfont.EventDispatcher.INACTIVE))}this.domHelper_.updateClassName(this.htmlElement_,add,remove)}this.dispatch_(webfont.EventDispatcher.INACTIVE)};EventDispatcher.prototype.dispatchActive=function(){if(this.setClasses_){this.domHelper_.updateClassName(this.htmlElement_,[this.cssClassName_.build(this.namespace_,webfont.EventDispatcher.ACTIVE)],[this.cssClassName_.build(this.namespace_,webfont.EventDispatcher.LOADING),this.cssClassName_.build(this.namespace_,webfont.EventDispatcher.INACTIVE)])}this.dispatch_(webfont.EventDispatcher.ACTIVE)};EventDispatcher.prototype.dispatch_=function(event,opt_font){if(this.dispatchEvents_&&this.callbacks_[event]){if(opt_font){this.callbacks_[event](opt_font.getName(),opt_font.getVariation())}else{this.callbacks_[event]()}}}});