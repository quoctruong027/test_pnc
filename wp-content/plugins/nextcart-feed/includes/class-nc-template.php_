<?php
/** 
 * @package Next-Cart
 * 
 */

class NCF_Template {
	
	
	public static function product_page() {
		global $product;
        ?>
		<script>
			<?php
			//$children_ids = $product->get_children();
			//$children_id = !empty($children_ids) ? reset($children_ids) : $product->get_id();
			$shopify_id = get_post_meta( $product->get_id(), '_shopify_id', true );
			?>
			dataLayer.push({
				'nc_productGroupId': <?php echo $shopify_id ? $shopify_id : $product->get_id(); ?>
			});
		</script>
		<?php
    }
	
	public static function product_quickview() {
		global $product;
        ?>
		<input type="hidden" name="shopify_id" value="<?php echo get_post_meta( $product->get_id(), '_shopify_id', true ) ? get_post_meta( $product->get_id(), '_shopify_id', true ) : $product->get_id(); ?>">
		<?php
    }
	
	public static function cart_page() {
        ?>
		<script>
			<?php
			$products = array();
			foreach ( WC()->cart->get_cart() as $cart_item_key => $cart_item ) {
				$_product     = apply_filters( 'woocommerce_cart_item_product', $cart_item['data'], $cart_item, $cart_item_key );
				if ( $_product && $_product->exists() && $cart_item['quantity'] > 0 && apply_filters( 'woocommerce_checkout_cart_item_visible', true, $cart_item, $cart_item_key ) ) {
					$shopify_id = get_post_meta( $cart_item['product_id'], '_shopify_id', true );
					$product_id = $shopify_id ? $shopify_id : $cart_item['product_id'];
					$products[] = array(
						'id' => $product_id,
						'name' => $_product->get_name(),
						'sku' => $_product->get_sku(),
						'price' => $_product->get_price(),
						'quantity' => $cart_item['quantity']
					);
				}
			}
			$checkout_total = WC()->cart->get_total('number');
			?>
			dataLayer.push({
				'checkoutTotal': <?php echo $checkout_total; ?>,
				'checkoutProducts': <?php echo json_encode($products); ?>
			});
		</script>
		<?php
    }
	
	public static function checkout_page() {
        ?>
		<script>
			<?php
			$products = array();
			foreach ( WC()->cart->get_cart() as $cart_item_key => $cart_item ) {
				$_product     = apply_filters( 'woocommerce_cart_item_product', $cart_item['data'], $cart_item, $cart_item_key );
				if ( $_product && $_product->exists() && $cart_item['quantity'] > 0 && apply_filters( 'woocommerce_checkout_cart_item_visible', true, $cart_item, $cart_item_key ) ) {
					$shopify_id = get_post_meta( $cart_item['product_id'], '_shopify_id', true );
					$product_id = $shopify_id ? $shopify_id : $cart_item['product_id'];
					$products[] = array(
						'id' => $product_id,
						'name' => $_product->get_name(),
						'sku' => $_product->get_sku(),
						'price' => $_product->get_price(),
						'quantity' => $cart_item['quantity']
					);
				}
			}
			$checkout_total = WC()->cart->get_total('number');
			?>
			dataLayer.push({
				'checkoutTotal': <?php echo $checkout_total; ?>,
				'checkoutProducts': <?php echo json_encode($products); ?>
			});
		</script>
		<?php
    }
	
	public static function thankyou_page($order_id) {
		$order = wc_get_order( $order_id );
        ?>
		<script>
			<?php
			$products = array();
			foreach ($order->get_items() as $item) {
				$_product = $order->get_product_from_item( $item );
				$shopify_id = get_post_meta( $item['product_id'], '_shopify_id', true );
				$product_id = $shopify_id ? $shopify_id : $item['product_id'];
				$products[] = array(
					'id' => $product_id,
					'name' => $_product->get_name(),
					'sku' => $_product->get_sku(),
					'price' => $_product->get_price(),
					'quantity' => $item['quantity']
				);
			?>
			<?php } ?>
			dataLayer.push({
				'transactionTotal': <?php echo $order->get_total(); ?>,
				'transactionId': <?php echo $order->get_id(); ?>,
				'transactionProducts': <?php echo json_encode($products); ?>
			});
		</script>
		<?php
    }
}